// <auto-generated />
using ChatRoom.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatRoom.Api.Data.Migrations
{
    [DbContext(typeof(ChatRoomContext))]
    partial class ChatRoomContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("ChatRoom.Api.Entities.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MessageRoomId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MessageText")
                        .HasColumnType("TEXT");

                    b.Property<int>("MessageUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MessageId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            MessageId = 1,
                            MessageRoomId = 1,
                            MessageText = "This message is from Admins",
                            MessageUserId = 1
                        },
                        new
                        {
                            MessageId = 2,
                            MessageRoomId = 2,
                            MessageText = "This message is from BackEnd",
                            MessageUserId = 2
                        },
                        new
                        {
                            MessageId = 3,
                            MessageRoomId = 3,
                            MessageText = "This message is from FrontEnd",
                            MessageUserId = 3
                        });
                });

            modelBuilder.Entity("ChatRoom.Api.Entities.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoomDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoomMembers")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoomName")
                        .HasColumnType("TEXT");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            RoomAdmin = 1,
                            RoomDescription = "Admin is Admin",
                            RoomMembers = "[1]",
                            RoomName = "Admin Room"
                        },
                        new
                        {
                            RoomId = 2,
                            RoomAdmin = 2,
                            RoomDescription = "BackEnd is Admin",
                            RoomMembers = "[2]",
                            RoomName = "BackEnd Room"
                        },
                        new
                        {
                            RoomId = 3,
                            RoomAdmin = 3,
                            RoomDescription = "FrontEnd is Admin",
                            RoomMembers = "[3]",
                            RoomName = "FrontEnd Room"
                        });
                });

            modelBuilder.Entity("ChatRoom.Api.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserEmail")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserPassword")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserEmail = "admin@test.com",
                            UserName = "Admin",
                            UserPassword = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            UserEmail = "backend@test.com",
                            UserName = "BackEnd",
                            UserPassword = "backend"
                        },
                        new
                        {
                            UserId = 3,
                            UserEmail = "frontend@test.com",
                            UserName = "FrontEnd",
                            UserPassword = "frontend"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
